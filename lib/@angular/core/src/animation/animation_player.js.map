{"version":3,"file":"animation_player.js","sourceRoot":"","sources":["../../../../../modules/@angular/core/src/animation/animation_player.ts"],"names":[],"mappings":";AAAA,qBAAgC,gBAAgB,CAAC,CAAA;AACjD,2BAA4B,sBAAsB,CAAC,CAAA;AAEnD;IAAA;IAUA,CAAC;IAFC,sBAAI,yCAAY;aAAhB,cAAsC,MAAM,IAAI,0BAAa,CAAC,6BAA6B,CAAC,CAAC,CAAC,CAAC;aAC/F,UAAiB,MAAuB,IAAI,MAAM,IAAI,0BAAa,CAAC,6BAA6B,CAAC,CAAC,CAAC,CAAC;;;OADN;IAEjG,sBAAC;AAAD,CAAC,AAVD,IAUC;AAVqB,uBAAe,kBAUpC,CAAA;AAED;IAGE;QAHF,iBAgBC;QAfS,mBAAc,GAAG,EAAE,CAAC;QACrB,iBAAY,GAAoB,IAAI,CAAC;QAE1C,wBAAiB,CAAC;YAChB,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,UAAA,KAAK,IAAM,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YACnD,KAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,oCAAM,GAAN,UAAO,EAAY,IAAU,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC5D,kCAAI,GAAJ,cAAc,CAAC;IACf,mCAAK,GAAL,cAAe,CAAC;IAChB,qCAAO,GAAP,cAAiB,CAAC;IAClB,oCAAM,GAAN,cAAgB,CAAC;IACjB,qCAAO,GAAP,cAAiB,CAAC;IAClB,mCAAK,GAAL,cAAe,CAAC;IAClB,0BAAC;AAAD,CAAC,AAhBD,IAgBC;AAhBY,2BAAmB,sBAgB/B,CAAA","sourcesContent":["import {scheduleMicroTask} from '../facade/lang';\nimport {BaseException} from '../facade/exceptions';\n\nexport abstract class AnimationPlayer {\n  abstract onDone(fn: Function): void;\n  abstract play(): void;\n  abstract pause(): void;\n  abstract restart(): void;\n  abstract finish(): void;\n  abstract destroy(): void;\n  abstract reset(): void;\n  get parentPlayer(): AnimationPlayer { throw new BaseException('NOT IMPLEMENTED: Base Class'); }\n  set parentPlayer(player: AnimationPlayer) { throw new BaseException('NOT IMPLEMENTED: Base Class'); }\n}\n\nexport class NoOpAnimationPlayer implements AnimationPlayer {\n  private _subscriptions = [];\n  public parentPlayer: AnimationPlayer = null;\n  constructor() {\n    scheduleMicroTask(() => {\n      this._subscriptions.forEach(entry => { entry(); });\n      this._subscriptions = [];\n    });\n  }\n  onDone(fn: Function): void { this._subscriptions.push(fn); }\n  play(): void {}\n  pause(): void {}\n  restart(): void {}\n  finish(): void {}\n  destroy(): void {}\n  reset(): void {}\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}